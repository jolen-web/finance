steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/finance-tracker:$BUILD_ID'
      - '-t'
      - 'gcr.io/$PROJECT_ID/finance-tracker:latest'
      - '-f'
      - 'Dockerfile'
      - '.'

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/finance-tracker:$BUILD_ID'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/finance-tracker:latest'

  # Run database migrations (disabled - migration job not yet created)
  # - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  #   entrypoint: gcloud
  #   args:
  #     - 'run'
  #     - 'jobs'
  #     - 'execute'
  #     - 'finance-tracker-migrate'
  #     - '--region'
  #     - 'us-central1'
  #     - '--wait'

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'finance-tracker'
      - '--image'
      - 'gcr.io/$PROJECT_ID/finance-tracker:$BUILD_ID'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '1'
      - '--timeout'
      - '3600'
      - '--add-cloudsql-instances'
      - 'jinolen:us-central1:finance-db'
      - '--set-env-vars'
      - 'FLASK_ENV=production,DB_USER=postgres,DB_NAME=finance,CLOUD_SQL_CONNECTION_NAME=jinolen:us-central1:finance-db'
      - '--update-secrets'
      - 'DB_PASSWORD=finance-db-password:latest,SECRET_KEY=flask-secret-key:latest,GOOGLE_API_KEY=gemini-api-key:latest'
      - '--port'
      - '5000'

images:
  - 'gcr.io/$PROJECT_ID/finance-tracker:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/finance-tracker:latest'

options:
  logging: CLOUD_LOGGING_ONLY
